[buildout]
versions = defined-versions
allow-picked-versions = false
show-picked-versions = true
update-versions-file = missing_versions.cfg 
extends = nginx.cfg

# please use alphabetic order in parts
parts =
    zerotired_site
    templates

#nginx

hooks-directory = ${buildout:directory}/hooks
# where are ``setup.py`` to develop local python eggs
develop =
    ./src
    ./recipes

extensions = 
# dump-picked-versions-file = missing_versions.cfg
lib-prefix=


; ===========================
; CONFIG
; ===========================

[config]
nginx-public-port = 5000

[system_env]
recipe = gocept.recipe.env

[os]
# this automatically sets ``/usr/local/`` vs ``/opt/local``
# and ``linux`` vs ``macosx``
# @see ``recipes/osdetect.py``
recipe = osdetect_recipe:detect
kernel =
lib_path =
make_opt =

[environment]
LIB_DIR=
DYLD_LIBRARY_PATH=
LD_LIBRARY_PATH=$LD_LIBRARY_PATH
DYLD_FALLBACK_LIBRARY_PATH=/opt/local/lib:/usr/lib
CXXFLAGS=
#CXXFLAGS="-O2 -pipe"
#CXX=/opt/local/bin/g++-apple-4.2
#CC=/opt/local/bin/gcc-apple-4.2
#CPP=/opt/local/bin/cpp-apple-4.2
#LD=/opt/local/libexec/apple-gcc42/gcc/i686-apple-darwin11/4.2.1/ld
LIBRARY_PATH=${os:lib_path}/lib
INCLUDE_PATH=${os:lib_path}/include
C_INCLUDE_PATH=${os:lib_path}/include
CXX_INCLUDE_PATH=${os:lib_path}/include
CPATH=${os:lib_path}/include
CFLAGS=-I${os:lib_path}/include
CPPFLAGS=-I${os:lib_path}/include
LANG=en_US.UTF-8
LANG_ALL=en_US.UTF-8


; ===========================
; PYTHON
; ===========================

; our site, the main package and all its starters
[zerotired_site]
recipe = zc.recipe.egg
eggs =
    zerotired.site
; scripts will be generated for all required eggs
dependent-scripts = true
interpreter = python-zerotired

# create a pserve starter for pycharm to include anything, also only
# locally built things
[zerotired_site_pycharm]
recipe = zc.recipe.egg:script
eggs =
    zerotired.site [test]
    ipython
scripts =
    ipython
interpreter = pycharm-python-zerotired
dependency=${psycopg2:recipe}


; ===========================
; FRONTEND
; ===========================

[nodejs]
recipe = hexagonit.recipe.cmmi
url = http://nodejs.org/dist/v${defined-versions:nodejs}/node-v${defined-versions:nodejs}.tar.gz
strip-top-level-dir = true
configure-options=
    --no-ssl2
environment-section = environment

[npm_install]
recipe = collective.recipe.cmd
on_install = true
on_update = false
cmds =
  PATH=${nodejs:location}/bin:$PATH
  ${nodejs:location}/bin/npm install less@${defined-versions:lessc}
  ${nodejs:location}/bin/npm install optparse
  ${nodejs:location}/bin/npm install nodeunit@${defined-versions:nodeunit}
  ${nodejs:location}/bin/npm install googleanalytics

[lesscss]
recipe = lovely.recipe:mkfile
dependency=${npm_install:recipe}
path = ${buildout:bin-directory}/lessc
mode = 0755
content =#!/bin/sh
  PATH=${nodejs:location}/bin:$PATH
  exec ${buildout:directory}/node_modules/less/bin/lessc $@

[nodejs_bin]
recipe = lovely.recipe:mkfile
dependency=${npm_install:recipe}
path = ${buildout:bin-directory}/node
mode = 0755
content =#!/bin/sh
  PATH=${nodejs:location}/bin:$PATH
  exec ${nodejs:location}/bin/node $@

[npm_bin]
recipe = lovely.recipe:mkfile
dependency=${npm_install:recipe}
path = ${buildout:bin-directory}/npm
mode = 0755
content =#!/bin/sh
  PATH=${nodejs:location}/bin:$PATH
  exec ${nodejs:location}/bin/npm $@

[nodeunit_bin]
recipe = lovely.recipe:mkfile
dependency=${npm_install:recipe}
path = ${buildout:bin-directory}/nodeunit
mode = 0755
content =#!/bin/sh
  PATH=${nodejs:location}/bin:$PATH
  exec ${buildout:directory}/node_modules/nodeunit/bin/nodeunit $@

[yuicompressor]
recipe = hexagonit.recipe.download
url = http://yui.zenfs.com/releases/yuicompressor/yuicompressor-${defined-versions:yuicompressor}.zip
strip-top-level-dir = true

[jquery]
recipe = hexagonit.recipe.download
url=https://github.com/jquery/jquery/archive/${defined-versions:jquery}.tar.gz
strip-top-level-dir=true


; ===========================
; BOILERPLATE
; ===========================

[templates]
recipe = z3c.recipe.filetemplate
source-directory = templates
force-overwrite = true

[supervisor]
recipe = zc.recipe.egg:script
relative-paths=true
scripts=supervisord
        supervisorctl
eggs = supervisor
port = ${config:supervisord-port}
initialization = import sys
                 sys.argv[1:1] = ['-c', '${buildout:directory}/parts/supervisor/supervisor.conf']

[symlinks]
recipe = collective.recipe.cmd
on_install = true
on_update = true
cmds =
    ln -s ${lua:location}/bin/lua ${buildout:directory}/bin/lua


[defined-versions]
nodejs=0.9.0
nginx=1.2.8
yuicompressor=2.4.7
lessc=1.3.1
nodeunit=0.7.4
jquery=1.8.3
# lua 5.2.x does not compile on osx properly (or at least out of the box)
lua=5.1.5
luajit=2.0.1
lua_nginx_module=0.7.19
devel_kit_nginx_module=0.2.18

# buildout base, see: http://reinout.vanrees.org/weblog/2013/02/12/prevent-buildout-problems.html
zc.buildout = 2.1.0
zc.recipe.egg = 2.0.0

# this section needs to be updated when ./missing_versions.cfg has
# entries. The missing versions file should never contain any entries,
# it is rebuilt upon buildout. This ensures that all versions are
# nailed in order to have a known good set of versions.
distribute = 0.6.45
pelican = 3.2.1
# required by pelican
six = 1.3.0
Unidecode = 0.04.12
blinker = 1.2
pytz = 2013b
docutils = 0.8.1
Pygments = 1.5
Jinja2 = 2.6
feedgenerator = 1.5

z3c.recipe.filetemplate = 2.2.0


